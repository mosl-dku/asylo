# Copyright (c) 1998 Cygnus Support
#
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors
# and need not follow the licensing terms described here, provided that
# the new terms are clearly indicated on the first page of each file where
# they apply.

DESTDIR =
VPATH = @srcdir@
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@
program_transform_name = @program_transform_name@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

SHELL =	/bin/sh

CC = @CC@

#AS = @AS@
AS = `if [ -f ${objroot}/../gas/as-new ] ; \
	then echo ${objroot}/../gas/as-new ; \
	else echo as ; fi`

AR = @AR@

#LD = @LD@
LD = `if [ -f ${objroot}/../ld/ld-new ] ; \
	then echo ${objroot}/../ld/ld-new ; \
	else echo ld ; fi`

RANLIB = @RANLIB@

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

# object files needed
OBJS = enclave.o mman.o signal.o xattr.o getauxval.o syscall.o

# Object files specific to particular targets.
EVALOBJS = ${OBJS}

GCC_LDFLAGS = `if [ -d ${objroot}/../gcc ] ; \
	then echo -L${objroot}/../gcc ; fi`

OUTPUTS = libenclave.a libpthread.a
SPECS = ${srcdir}/enclave.specs

# Host specific makefile fragment comes in here.
@host_makefile_frag@

all: ${OUTPUTS} stmp-targ-include

#
# here's where we build the library for each target
#

libenclave.a: $(EVALOBJS)
	${AR} ${ARFLAGS} $@ $(EVALOBJS)
	${RANLIB} $@

# Create an empty archive for pthread library. We include pthread symbols in
# the base libc, but don't want build rules to get errors with -lpthread.
libpthread.a:
	${AR} ${ARFLAGS} $@

doc:

clean mostlyclean:
	rm -f $(OUTPUTS) *.i *~ *.o *-test *.srec *.dis *.map *.x

distclean maintainer-clean realclean: clean
	rm -f Makefile config.status $(OUTPUTS)

.PHONY: install info install-info clean-info
install:
	@for outputs in ${OUTPUTS} ${SPECS}; do\
	 mkdir -p $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}; \
	 $(INSTALL_DATA) $${outputs} $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}; \
	done
	if [ -z "$(MULTISUBDIR)" ]; then \
	 mkdir $(DESTDIR)$(tooldir)/include/enclave/; \
	 $(INSTALL_DATA) $(srcdir)/enclave_syscalls.h $(DESTDIR)$(tooldir)/include/enclave/enclave_syscalls.h || exit $$?; \
	else true; fi

info:
install-info:
clean-info:

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck

## Host specific Makefile Fragment
stmp-targ-include: $(srcdir)/enclave_syscalls.h
	if [ -e ${objroot}/newlib/targ-include/enclave_syscalls.h ]; then \
		rm -f ${objroot}/newlib/targ-include/enclave_syscalls.h; \
	else true; fi ; \
	if [ -d ${objroot}/newlib/targ-include ]; then \
		mkdir -p ${objroot}/newlib/targ-include/enclave/; \
		cp $(srcdir)/enclave_syscalls.h ${objroot}/newlib/targ-include/enclave/enclave_syscalls.h; \
	else true; fi ; \
	touch $@

all-recursive: stmp-targ-include
